<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustack.chat.mapper.SysDeptMapper">

    <resultMap type="com.ustack.chat.entity.SysDeptEntity" id="SysDeptResult">
        <id     property="id"     column="id"     />
        <result     property="deptId"     column="dept_id"     />
        <result property="parentId"   column="parent_id"   />
        <result property="ancestors"  column="ancestors"   />
        <result property="deptName"   column="dept_name"   />
        <result property="orderNum"   column="order_num"   />
        <result property="leader"     column="leader"      />
        <result property="phone"      column="phone"       />
        <result property="email"      column="email"       />
        <result property="status"     column="status"      />
        <result property="delFlag"    column="del_flag"    />
        <result property="parentName" column="parent_name" />
        <result property="createUser"   column="create_user"   />
        <result property="createTime" column="create_time" />
        <result property="updateUser"   column="update_user"   />
        <result property="updateTime" column="update_time" />
        <result property="createUserId" column="create_user_id" />
        <result property="updateUserId" column="update_user_id" />
        <result property="guid" column="guid" />
        <result property="version" column="version" />
    </resultMap>

    <sql id="selectDeptVo">
        select d.id,d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag,
               d.create_user,d.create_user_id, d.create_time, d.update_user, d.update_time, d.update_user_id, d.guid, d.version
        from sys_dept d
    </sql>

    <update id="updateDeptChildren" parameterType="java.util.List">
        update sys_dept set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case dept_id" close="end">
            when #{item.deptId} then #{item.ancestors}
        </foreach>
        where dept_id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.deptId}
        </foreach>
    </update>

    <update id="updateDeptStatusNormal" parameterType="Long">
        update sys_dept set status = '0' where dept_id in
        <foreach collection="array" item="deptId" open="(" separator="," close=")">
            #{deptId}
        </foreach>
    </update>

    <select id="selectDeptById" parameterType="Long" resultType="com.ustack.chat.entity.SysDeptEntity">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
               (select dept_name from sys_dept where dept_id = d.parent_id) parent_name
        from sys_dept d
        where d.dept_id = #{deptId}
    </select>

    <select id="selectNormalChildrenDeptById" parameterType="Long" resultType="java.lang.Integer">
        select count(*) from sys_dept where status = 0 and del_flag = '0' and find_in_set(#{deptId}, ancestors)
    </select>

    <select id="selectChildrenDeptById" parameterType="Long" resultType="com.ustack.chat.entity.SysDeptEntity">
        select * from sys_dept where find_in_set(#{deptId}, ancestors)
    </select>

    <select id="hasChildByDeptId" parameterType="Long" resultType="java.lang.Integer">
        select count(1) from sys_dept
        where del_flag = '0' and parent_id = #{deptId} limit 1
    </select>

    <select id="checkDeptExistUser" parameterType="Long" resultType="java.lang.Integer">
        select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
    </select>

    <select id="selectDeptListByRoleId" resultType="java.lang.Long">
        select d.dept_id
        from sys_dept d
        left join sys_role_dept rd on d.dept_id = rd.dept_id
        where rd.role_id = #{roleId}
        <if test="deptCheckStrictly">
            and d.dept_id not in (select d.parent_id from sys_dept d inner join sys_role_dept rd on d.dept_id = rd.dept_id and rd.role_id = #{roleId})
        </if>
        order by d.parent_id, d.order_num
    </select>

</mapper>
